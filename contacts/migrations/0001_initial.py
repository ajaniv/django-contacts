# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-05-10 23:32
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('social_media', '0001_initial'),
        ('organizations', '0001_initial'),
        ('demographics', '0001_initial'),
        ('sites', '0002_alter_domain_unique'),
        ('locations', '0001_initial'),
        ('core', '0001_initial'),
        ('images', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('anniversary', models.DateField(blank=True, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'update_time',
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'db_table': 'sl_contacts_contact',
            },
        ),
        migrations.CreateModel(
            name='ContactAddress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.Address')),
                ('address_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='locations.AddressType')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactaddress_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactaddress_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactaddress_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactaddress_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact addresses',
                'db_table': 'sl_contacts_contact_address',
                'verbose_name': 'Contact address',
            },
        ),
        migrations.CreateModel(
            name='ContactAnnotation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Annotation')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactannotation_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactannotation_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactannotation_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactannotation_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact annotations',
                'db_table': 'sl_contacts_contact_annotation',
                'verbose_name': 'Contact annotation',
            },
        ),
        migrations.CreateModel(
            name='ContactCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Category')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactcategory_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactcategory_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactcategory_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactcategory_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact categories',
                'db_table': 'sl_contacts_contact_category',
                'verbose_name': 'Contact category',
            },
        ),
        migrations.CreateModel(
            name='ContactEmail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactemail_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactemail_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_media.Email')),
                ('email_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='social_media.EmailType')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactemail_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactemail_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact emails',
                'db_table': 'sl_contacts_contact_email',
                'verbose_name': 'Contact email',
            },
        ),
        migrations.CreateModel(
            name='ContactFormattedName',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactformattedname_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactformattedname_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_media.FormattedName')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactformattedname_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactformattedname_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Formatted names',
                'db_table': 'sl_contacts_formatted_name',
                'verbose_name': 'Formatted name',
            },
        ),
        migrations.CreateModel(
            name='ContactGeographicLocation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactgeographiclocation_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactgeographiclocation_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('geographic_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.GeographicLocation')),
                ('geographic_location_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='locations.GeographicLocationType')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactgeographiclocation_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactgeographiclocation_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact geographic locations',
                'db_table': 'sl_contacts_contact_geographic_location',
                'verbose_name': 'Contact geographic location',
            },
        ),
        migrations.CreateModel(
            name='ContactGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactgroup_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactgroup_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_media.Group')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactgroup_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactgroup_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact groups',
                'db_table': 'sl_contacts_contact_group',
                'verbose_name': 'Contact group',
            },
        ),
        migrations.CreateModel(
            name='ContactInstantMessaging',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactinstantmessaging_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactinstantmessaging_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('instant_messaging', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_media.InstantMessaging')),
                ('instant_messaging_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='social_media.InstantMessagingType')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactinstantmessaging_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactinstantmessaging_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact instant messagings',
                'db_table': 'sl_contacts_contact_instant_messaging',
                'verbose_name': 'Contact instant messaging',
            },
        ),
        migrations.CreateModel(
            name='ContactLanguage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactlanguage_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactlanguage_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.Language')),
                ('language_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='locations.LanguageType')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactlanguage_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactlanguage_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact languages',
                'db_table': 'sl_contacts_contact_language',
                'verbose_name': 'Contact language',
            },
        ),
        migrations.CreateModel(
            name='ContactLogo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts_contactlogo_related_contact', to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactlogo_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactlogo_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('image_reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='images.ImageReference')),
                ('logo_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='social_media.LogoType')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactlogo_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactlogo_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact logos',
                'db_table': 'sl_contacts_contact_logo',
                'verbose_name': 'Contact logo',
            },
        ),
        migrations.CreateModel(
            name='ContactName',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactname_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactname_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_media.Name')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactname_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactname_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact names',
                'db_table': 'sl_contacts_contact_name',
                'verbose_name': 'Contact name',
            },
        ),
        migrations.CreateModel(
            name='ContactNickname',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactnickname_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactnickname_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_media.Nickname')),
                ('nickname_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='social_media.NicknameType')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactnickname_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactnickname_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact nicknames',
                'db_table': 'sl_contacts_contact_nickname',
                'verbose_name': 'Contact nickname',
            },
        ),
        migrations.CreateModel(
            name='ContactOrganization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactorganization_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactorganization_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.Organization')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactorganization_related_site', to='sites.Site')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organizations.OrganizationUnit')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactorganization_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact organizations',
                'db_table': 'sl_contacts_contact_organization',
                'verbose_name': 'Contact organization',
            },
        ),
        migrations.CreateModel(
            name='ContactPhone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactphone_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactphone_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_media.Phone')),
                ('phone_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='social_media.PhoneType')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactphone_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactphone_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact phones',
                'db_table': 'sl_contacts_contact_phone',
                'verbose_name': 'Contact phone',
            },
        ),
        migrations.CreateModel(
            name='ContactPhoto',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts_contactphoto_related_contact', to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactphoto_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactphoto_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('image_reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='images.ImageReference')),
                ('photo_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='social_media.PhotoType')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactphoto_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactphoto_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact photos',
                'db_table': 'sl_contacts_contact_photo',
                'verbose_name': 'Contact photo',
            },
        ),
        migrations.CreateModel(
            name='ContactRelationshipType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('alias', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactrelationshiptype_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactrelationshiptype_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactrelationshiptype_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactrelationshiptype_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'ordering': ('name',),
                'abstract': False,
                'verbose_name_plural': 'Contact relationship types',
                'db_table': 'sl_contacts_contact_relationship_type',
                'verbose_name': 'Contact relationship type',
            },
        ),
        migrations.CreateModel(
            name='ContactRole',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactrole_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactrole_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organizations.Organization')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.Role')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactrole_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contactrole_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact roles',
                'db_table': 'sl_contacts_contact_role',
                'verbose_name': 'Contact role',
            },
        ),
        migrations.CreateModel(
            name='ContactTimezone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttimezone_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttimezone_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttimezone_related_site', to='sites.Site')),
                ('time_zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='locations.Timezone')),
                ('time_zone_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='locations.TimezoneType')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttimezone_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact timezones',
                'db_table': 'sl_contacts_contact_timezone',
                'verbose_name': 'Contact timezone',
            },
        ),
        migrations.CreateModel(
            name='ContactTitle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttitle_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttitle_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='organizations.Organization')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttitle_related_site', to='sites.Site')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='organizations.Title')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttitle_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact titles',
                'db_table': 'sl_contacts_contact_title',
                'verbose_name': 'Contact title',
            },
        ),
        migrations.CreateModel(
            name='ContactType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('alias', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttype_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttype_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttype_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacttype_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'ordering': ('name',),
                'abstract': False,
                'verbose_name_plural': 'Contact types',
                'db_table': 'sl_contacts_contact_type',
                'verbose_name': 'Contact type',
            },
        ),
        migrations.CreateModel(
            name='ContactUrl',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacturl_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacturl_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacturl_related_site', to='sites.Site')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contacturl_related_update_user', to=settings.AUTH_USER_MODEL)),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_media.Url')),
                ('url_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='social_media.UrlType')),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Contact urls',
                'db_table': 'sl_contacts_contact_url',
                'verbose_name': 'Contact url',
            },
        ),
        migrations.CreateModel(
            name='RelatedContact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('version', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveSmallIntegerField(default=0)),
                ('contract_relationship_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contacts.ContactRelationshipType')),
                ('creation_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_relatedcontact_related_creation_user', to=settings.AUTH_USER_MODEL)),
                ('effective_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_relatedcontact_related_effective_user', to=settings.AUTH_USER_MODEL)),
                ('from_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts_relatedcontact_related_from_contact', to='contacts.Contact')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_relatedcontact_related_site', to='sites.Site')),
                ('to_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts_relatedcontact_related_to_contact', to='contacts.Contact')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_relatedcontact_related_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'update_time',
                'abstract': False,
                'verbose_name_plural': 'Related contacts',
                'db_table': 'sl_contacts_related_contact',
                'verbose_name': 'Related contact',
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='addresses',
            field=models.ManyToManyField(related_name='Address_set', through='contacts.ContactAddress', to='locations.Address'),
        ),
        migrations.AddField(
            model_name='contact',
            name='annotations',
            field=models.ManyToManyField(related_name='Annotation_set', through='contacts.ContactAnnotation', to='core.Annotation'),
        ),
        migrations.AddField(
            model_name='contact',
            name='categories',
            field=models.ManyToManyField(related_name='Category_set', through='contacts.ContactCategory', to='core.Category'),
        ),
        migrations.AddField(
            model_name='contact',
            name='contact_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='contacts.ContactType'),
        ),
        migrations.AddField(
            model_name='contact',
            name='creation_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contact_related_creation_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contact',
            name='effective_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contact_related_effective_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contact',
            name='emails',
            field=models.ManyToManyField(related_name='Email_set', through='contacts.ContactEmail', to='social_media.Email'),
        ),
        migrations.AddField(
            model_name='contact',
            name='formatted_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='social_media.FormattedName'),
        ),
        migrations.AddField(
            model_name='contact',
            name='formatted_names',
            field=models.ManyToManyField(related_name='FormattedName_set', through='contacts.ContactFormattedName', to='social_media.FormattedName'),
        ),
        migrations.AddField(
            model_name='contact',
            name='gender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='demographics.Gender'),
        ),
        migrations.AddField(
            model_name='contact',
            name='geographic_locations',
            field=models.ManyToManyField(related_name='GeographicLocation_set', through='contacts.ContactGeographicLocation', to='locations.GeographicLocation'),
        ),
        migrations.AddField(
            model_name='contact',
            name='groups',
            field=models.ManyToManyField(related_name='Group_set', through='contacts.ContactGroup', to='social_media.Group'),
        ),
        migrations.AddField(
            model_name='contact',
            name='instant_messaging',
            field=models.ManyToManyField(related_name='InstantMessaging_set', through='contacts.ContactInstantMessaging', to='social_media.InstantMessaging'),
        ),
        migrations.AddField(
            model_name='contact',
            name='languages',
            field=models.ManyToManyField(related_name='Language_set', through='contacts.ContactLanguage', to='locations.Language'),
        ),
        migrations.AddField(
            model_name='contact',
            name='logos',
            field=models.ManyToManyField(related_name='contacts_contact_related_contact_logo', through='contacts.ContactLogo', to='images.ImageReference'),
        ),
        migrations.AddField(
            model_name='contact',
            name='name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='social_media.Name'),
        ),
        migrations.AddField(
            model_name='contact',
            name='names',
            field=models.ManyToManyField(related_name='Name_set', through='contacts.ContactName', to='social_media.Name'),
        ),
        migrations.AddField(
            model_name='contact',
            name='nicknames',
            field=models.ManyToManyField(related_name='Nickname_set', through='contacts.ContactNickname', to='social_media.Nickname'),
        ),
        migrations.AddField(
            model_name='contact',
            name='organizations',
            field=models.ManyToManyField(related_name='Organization_set', through='contacts.ContactOrganization', to='organizations.Organization'),
        ),
        migrations.AddField(
            model_name='contact',
            name='phones',
            field=models.ManyToManyField(related_name='Phone_set', through='contacts.ContactPhone', to='social_media.Phone'),
        ),
        migrations.AddField(
            model_name='contact',
            name='photos',
            field=models.ManyToManyField(related_name='contacts_contact_related_contact_photo', through='contacts.ContactPhoto', to='images.ImageReference'),
        ),
        migrations.AddField(
            model_name='contact',
            name='related_contacts',
            field=models.ManyToManyField(through='contacts.RelatedContact', to='contacts.Contact'),
        ),
        migrations.AddField(
            model_name='contact',
            name='roles',
            field=models.ManyToManyField(related_name='Role_set', through='contacts.ContactRole', to='organizations.Role'),
        ),
        migrations.AddField(
            model_name='contact',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contact_related_site', to='sites.Site'),
        ),
        migrations.AddField(
            model_name='contact',
            name='timezones',
            field=models.ManyToManyField(related_name='Timezone_set', through='contacts.ContactTimezone', to='locations.Timezone'),
        ),
        migrations.AddField(
            model_name='contact',
            name='update_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contacts_contact_related_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contact',
            name='urls',
            field=models.ManyToManyField(related_name='Url_set', through='contacts.ContactUrl', to='social_media.Url'),
        ),
        migrations.AlterUniqueTogether(
            name='relatedcontact',
            unique_together=set([('from_contact', 'to_contact', 'contract_relationship_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contacturl',
            unique_together=set([('contact', 'url', 'url_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contacttitle',
            unique_together=set([('contact', 'title', 'organization')]),
        ),
        migrations.AlterUniqueTogether(
            name='contacttimezone',
            unique_together=set([('contact', 'time_zone', 'time_zone_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactrole',
            unique_together=set([('contact', 'role', 'organization')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactphoto',
            unique_together=set([('contact', 'image_reference', 'photo_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactphone',
            unique_together=set([('contact', 'phone', 'phone_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactorganization',
            unique_together=set([('contact', 'organization')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactnickname',
            unique_together=set([('contact', 'name', 'nickname_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactname',
            unique_together=set([('contact', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactlogo',
            unique_together=set([('contact', 'image_reference', 'logo_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactlanguage',
            unique_together=set([('contact', 'language', 'language_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactinstantmessaging',
            unique_together=set([('contact', 'instant_messaging', 'instant_messaging_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactgroup',
            unique_together=set([('contact', 'group')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactgeographiclocation',
            unique_together=set([('contact', 'geographic_location', 'geographic_location_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactformattedname',
            unique_together=set([('contact', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactemail',
            unique_together=set([('contact', 'email', 'email_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactcategory',
            unique_together=set([('contact', 'category')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactannotation',
            unique_together=set([('contact', 'annotation')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactaddress',
            unique_together=set([('contact', 'address', 'address_type')]),
        ),
    ]
